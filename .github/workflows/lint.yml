name: lint

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  pyright:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12", "3.13"]
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-tags: true

      - name: Load cached Poetry installation
        uses: actions/cache@v3
        with:
          path: ~/.local/pypoetry
          key: poetry-0

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: poetry
          cache-dependency-path: pyproject.toml

      - name: Install dependencies
        run: poetry install --all-groups -E voice -E speed

      - name: Configure Poetry for pyright
        run: echo "$(poetry env info --path)/bin" >> $GITHUB_PATH

      - name: Set up pyright
        run: echo "PYRIGHT_VERSION=$(python -c 'import pyright; print(pyright.__pyright_version__)')" >> $GITHUB_ENV

      - name: Run pyright (Linux)
        uses: jakebailey/pyright-action@v1.2.0
        with:
          version: ${{ env.PYRIGHT_VERSION }}
          python-version: ${{ matrix.python-version }}
          python-platform: Linux
          # only add comments for 3.12
          no-comments: ${{ matrix.python-version != '3.12' }}
          warnings: true

      - name: Run pyright (Windows)
        uses: jakebailey/pyright-action@v1.0.3
        # run anyway
        if: success() || failure()
        with:
          version: ${{ env.PYRIGHT_VERSION }}
          python-version: ${{ matrix.python-version }}
          python-platform: Windows
          # only add comments for one platform
          no-comments: true
          warnings: true

  slotscheck:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-tags: true

      - name: Load cached Poetry installation
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: poetry-0

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Set up python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: 3.12
          cache: poetry
          cache-dependency-path: pyproject.toml

      - name: Install dependencies
        run: poetry install --all-groups -E voice -E speed

      - name: Configure Poetry for slotscheck
        run: echo "$(poetry env info --path)/bin" >> $GITHUB_PATH

      - name: Run slotscheck
        run: task slotscheck
